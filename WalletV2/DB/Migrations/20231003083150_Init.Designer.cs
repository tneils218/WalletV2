// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletV2.DB;

#nullable disable

namespace WalletV2.DB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231003083150_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WalletV2.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int")
                        .HasColumnName("account_type_id");

                    b.Property<DateTime?>("ActivatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("activated_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("full_name");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("tbl_account", (string)null);
                });

            modelBuilder.Entity("WalletV2.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_account_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "normal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "premium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "vip"
                        });
                });

            modelBuilder.Entity("WalletV2.Models.ActionFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int")
                        .HasColumnName("action_fee_account_type");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("action_fee_action_type");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fee");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("ActionTypeId");

                    b.ToTable("tbl_action_fee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountTypeId = 1,
                            ActionTypeId = 1,
                            Fee = 0m
                        },
                        new
                        {
                            Id = 2,
                            AccountTypeId = 2,
                            ActionTypeId = 1,
                            Fee = 0m
                        },
                        new
                        {
                            Id = 3,
                            AccountTypeId = 3,
                            ActionTypeId = 1,
                            Fee = 0m
                        },
                        new
                        {
                            Id = 4,
                            AccountTypeId = 1,
                            ActionTypeId = 2,
                            Fee = 30m
                        },
                        new
                        {
                            Id = 5,
                            AccountTypeId = 2,
                            ActionTypeId = 2,
                            Fee = 20m
                        },
                        new
                        {
                            Id = 6,
                            AccountTypeId = 3,
                            ActionTypeId = 2,
                            Fee = 1m
                        },
                        new
                        {
                            Id = 7,
                            AccountTypeId = 1,
                            ActionTypeId = 3,
                            Fee = 25m
                        },
                        new
                        {
                            Id = 8,
                            AccountTypeId = 2,
                            ActionTypeId = 3,
                            Fee = 15m
                        },
                        new
                        {
                            Id = 9,
                            AccountTypeId = 3,
                            ActionTypeId = 3,
                            Fee = 5m
                        },
                        new
                        {
                            Id = 10,
                            AccountTypeId = 1,
                            ActionTypeId = 4,
                            Fee = 0m
                        },
                        new
                        {
                            Id = 11,
                            AccountTypeId = 2,
                            ActionTypeId = 4,
                            Fee = 0m
                        },
                        new
                        {
                            Id = 12,
                            AccountTypeId = 3,
                            ActionTypeId = 4,
                            Fee = 0m
                        });
                });

            modelBuilder.Entity("WalletV2.Models.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_action", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Add money"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Transfer money"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Withdraw money"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Receive money"
                        });
                });

            modelBuilder.Entity("WalletV2.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wallet_amount");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("wallet_updated_at");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("tbl_wallet", (string)null);
                });

            modelBuilder.Entity("WalletV2.Models.WalletHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int")
                        .HasColumnName("wallet_account_type");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("wallet_action_type");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wallet_amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("wallet_created_at");

                    b.Property<int?>("DestinationWalletId")
                        .HasColumnType("int")
                        .HasColumnName("destination_wallet_id");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wallet_fee");

                    b.Property<int?>("SourceWalletId")
                        .HasColumnType("int")
                        .HasColumnName("source_wallet_id");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_wallet_history", (string)null);
                });

            modelBuilder.Entity("WalletV2.Models.Account", b =>
                {
                    b.HasOne("WalletV2.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("WalletV2.Models.ActionFee", b =>
                {
                    b.HasOne("WalletV2.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WalletV2.Models.ActionType", "ActionType")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("ActionType");
                });

            modelBuilder.Entity("WalletV2.Models.Wallet", b =>
                {
                    b.HasOne("WalletV2.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("WalletV2.Models.WalletHistory", b =>
                {
                    b.HasOne("WalletV2.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WalletV2.Models.ActionType", "ActionType")
                        .WithMany()
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WalletV2.Models.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("ActionType");

                    b.Navigation("Wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
